
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000035e0 memsz 0x000035e0 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002b60 vaddr 0x0804ab60 paddr 0x0804ab60 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a1b4
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00001832  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a1b4  0804a1b4  000021b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000995  0804a1c8  0804a1c8  000021c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ab60  0804ab60  00002b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000964  0804ac7c  0804ac7c  00002c7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a1b4 l    d  .fini	00000000              .fini
0804a1c8 l    d  .rodata	00000000              .rodata
0804ab60 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ac7c l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a3cc l     O .rodata	00000010              array.3267
00000000 l    df *ABS*	00000000              support.c
0804910f l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
0804962b l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b5dc l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ab60 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a1b0 g     F .text	00000002              __libc_csu_fini
08049334 g     F .text	00000045              skip
080495d2 g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a1b4 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048d97 g     F .text	000000a9              phase_5
080492fa g     F .text	00000002              initialize_bomb_solve
08048f13 g     F .text	00000080              phase_7
080492fc g     F .text	00000038              blank_line
080490ca g     F .text	00000045              phase_9
080496ff g     F .text	000007ca              submitr
08048caa g     F .text	00000082              phase_3
08048c2d g     F .text	0000005c              phase_1
08049169 g     F .text	0000001f              invalid_phase
08049efe g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
08049461 g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
08049079 g     F .text	00000051              fun9
0804a1cc g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
08049188 g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a150 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048e40 g     F .text	0000005e              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a1c8 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
08049608 g     F .text	00000023              sigalrm_handler
08049ec9 g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
080494d9 g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
080491a7 g     F .text	00000065              strings_not_equal
08048d2c g     F .text	0000006b              phase_4
08048f93 g     F .text	000000e6              phase_8
08048e9e g     F .text	00000075              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a0d0 g     F .text	0000007c              driver_post
08049379 g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
0804949e g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
0804920c g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 b0 a1 04 08       	push   $0x804a1b0
 8048990:	68 50 a1 04 08       	push   $0x804a150
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 d0 a1 04 08       	push   $0x804a1d0
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 d2 a1 04 08       	push   $0x804a1d2
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 ef a1 04 08       	push   $0x804a1ef
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 0c 07 00 00       	call   804920c <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 60 a2 04 08       	push   $0x804a260
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 9c a2 04 08 	movl   $0x804a29c,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 bb 09 00 00       	call   80494d9 <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 a7 0a 00 00       	call   80495d2 <phase_defused>
 8048b2b:	c7 04 24 c8 a2 04 08 	movl   $0x804a2c8,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 9d 09 00 00       	call   80494d9 <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 89 0a 00 00       	call   80495d2 <phase_defused>
 8048b49:	c7 04 24 09 a2 04 08 	movl   $0x804a209,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 7f 09 00 00       	call   80494d9 <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 6b 0a 00 00       	call   80495d2 <phase_defused>
 8048b67:	c7 04 24 27 a2 04 08 	movl   $0x804a227,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 61 09 00 00       	call   80494d9 <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 ac 01 00 00       	call   8048d2c <phase_4>
 8048b80:	e8 4d 0a 00 00       	call   80495d2 <phase_defused>
 8048b85:	c7 04 24 f4 a2 04 08 	movl   $0x804a2f4,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 43 09 00 00       	call   80494d9 <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 f9 01 00 00       	call   8048d97 <phase_5>
 8048b9e:	e8 2f 0a 00 00       	call   80495d2 <phase_defused>
 8048ba3:	c7 04 24 38 a2 04 08 	movl   $0x804a238,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 25 09 00 00       	call   80494d9 <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 e2 02 00 00       	call   8048e9e <phase_6>
 8048bbc:	e8 11 0a 00 00       	call   80495d2 <phase_defused>
 8048bc1:	c7 04 24 18 a3 04 08 	movl   $0x804a318,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 07 09 00 00       	call   80494d9 <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 39 03 00 00       	call   8048f13 <phase_7>
 8048bda:	e8 f3 09 00 00       	call   80495d2 <phase_defused>
 8048bdf:	c7 04 24 38 a3 04 08 	movl   $0x804a338,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 e9 08 00 00       	call   80494d9 <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 9b 03 00 00       	call   8048f93 <phase_8>
 8048bf8:	e8 d5 09 00 00       	call   80495d2 <phase_defused>
 8048bfd:	c7 04 24 56 a2 04 08 	movl   $0x804a256,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 cb 08 00 00       	call   80494d9 <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 b4 04 00 00       	call   80490ca <phase_9>
 8048c16:	e8 b7 09 00 00       	call   80495d2 <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 c0 a5 04 08       	push   $0x804a5c0
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 fd 07 00 00       	call   8049461 <explode_bomb>
 8048c64:	81 7c 24 08 a7 02 00 	cmpl   $0x2a7,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 ee 07 00 00       	call   8049461 <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 60 a3 04 08       	push   $0x804a360
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 0d 05 00 00       	call   80491a7 <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 bb 07 00 00       	call   8049461 <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 80 a3 04 08       	push   $0x804a380
 8048cb2:	e8 d1 04 00 00       	call   8049188 <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 50 61 63 6b    	movl   $0x6b636150,(%eax)
 8048cc8:	c7 40 04 20 6d 79 20 	movl   $0x20796d20,0x4(%eax)
 8048ccf:	c7 40 08 62 6f 78 20 	movl   $0x20786f62,0x8(%eax)
 8048cd6:	c7 40 0c 77 69 74 68 	movl   $0x68746977,0xc(%eax)
 8048cdd:	c7 40 10 20 66 69 76 	movl   $0x76696620,0x10(%eax)
 8048ce4:	c7 40 14 65 20 64 6f 	movl   $0x6f642065,0x14(%eax)
 8048ceb:	c7 40 18 7a 65 6e 20 	movl   $0x206e657a,0x18(%eax)
 8048cf2:	c7 40 1c 6c 69 71 75 	movl   $0x7571696c,0x1c(%eax)
 8048cf9:	c7 40 20 6f 72 20 6a 	movl   $0x6a20726f,0x20(%eax)
 8048d00:	c7 40 24 75 67 73 2e 	movl   $0x2e736775,0x24(%eax)
 8048d07:	c6 40 28 00          	movb   $0x0,0x28(%eax)
 8048d0b:	c6 40 03 30          	movb   $0x30,0x3(%eax)
 8048d0f:	83 c4 08             	add    $0x8,%esp
 8048d12:	50                   	push   %eax
 8048d13:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d17:	e8 8b 04 00 00       	call   80491a7 <strings_not_equal>
 8048d1c:	83 c4 10             	add    $0x10,%esp
 8048d1f:	85 c0                	test   %eax,%eax
 8048d21:	74 05                	je     8048d28 <phase_3+0x7e>
 8048d23:	e8 39 07 00 00       	call   8049461 <explode_bomb>
 8048d28:	83 c4 0c             	add    $0xc,%esp
 8048d2b:	c3                   	ret    

08048d2c <phase_4>:
 8048d2c:	56                   	push   %esi
 8048d2d:	53                   	push   %ebx
 8048d2e:	83 ec 2c             	sub    $0x2c,%esp
 8048d31:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d37:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d3b:	31 c0                	xor    %eax,%eax
 8048d3d:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d41:	50                   	push   %eax
 8048d42:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d46:	e8 53 07 00 00       	call   804949e <read_six_numbers>
 8048d4b:	83 c4 10             	add    $0x10,%esp
 8048d4e:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
 8048d53:	79 05                	jns    8048d5a <phase_4+0x2e>
 8048d55:	e8 07 07 00 00       	call   8049461 <explode_bomb>
 8048d5a:	8d 74 24 04          	lea    0x4(%esp),%esi
 8048d5e:	bb 16 00 00 00       	mov    $0x16,%ebx
 8048d63:	89 d8                	mov    %ebx,%eax
 8048d65:	03 06                	add    (%esi),%eax
 8048d67:	39 46 04             	cmp    %eax,0x4(%esi)
 8048d6a:	74 05                	je     8048d71 <phase_4+0x45>
 8048d6c:	e8 f0 06 00 00       	call   8049461 <explode_bomb>
 8048d71:	83 c6 04             	add    $0x4,%esi
 8048d74:	83 c3 16             	add    $0x16,%ebx
 8048d77:	81 fb 84 00 00 00    	cmp    $0x84,%ebx
 8048d7d:	75 e4                	jne    8048d63 <phase_4+0x37>
 8048d7f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d83:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d8a:	74 05                	je     8048d91 <phase_4+0x65>
 8048d8c:	e8 6f fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d91:	83 c4 24             	add    $0x24,%esp
 8048d94:	5b                   	pop    %ebx
 8048d95:	5e                   	pop    %esi
 8048d96:	c3                   	ret    

08048d97 <phase_5>:
 8048d97:	83 ec 1c             	sub    $0x1c,%esp
 8048d9a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048da0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048da4:	31 c0                	xor    %eax,%eax
 8048da6:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048daa:	50                   	push   %eax
 8048dab:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048daf:	50                   	push   %eax
 8048db0:	68 bd a5 04 08       	push   $0x804a5bd
 8048db5:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048db9:	e8 f2 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048dbe:	83 c4 10             	add    $0x10,%esp
 8048dc1:	83 f8 01             	cmp    $0x1,%eax
 8048dc4:	7f 05                	jg     8048dcb <phase_5+0x34>
 8048dc6:	e8 96 06 00 00       	call   8049461 <explode_bomb>
 8048dcb:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dd0:	77 3c                	ja     8048e0e <phase_5+0x77>
 8048dd2:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dd6:	ff 24 85 ac a3 04 08 	jmp    *0x804a3ac(,%eax,4)
 8048ddd:	b8 5e 03 00 00       	mov    $0x35e,%eax
 8048de2:	eb 3b                	jmp    8048e1f <phase_5+0x88>
 8048de4:	b8 ce 03 00 00       	mov    $0x3ce,%eax
 8048de9:	eb 34                	jmp    8048e1f <phase_5+0x88>
 8048deb:	b8 b0 02 00 00       	mov    $0x2b0,%eax
 8048df0:	eb 2d                	jmp    8048e1f <phase_5+0x88>
 8048df2:	b8 8b 01 00 00       	mov    $0x18b,%eax
 8048df7:	eb 26                	jmp    8048e1f <phase_5+0x88>
 8048df9:	b8 47 01 00 00       	mov    $0x147,%eax
 8048dfe:	eb 1f                	jmp    8048e1f <phase_5+0x88>
 8048e00:	b8 72 02 00 00       	mov    $0x272,%eax
 8048e05:	eb 18                	jmp    8048e1f <phase_5+0x88>
 8048e07:	b8 81 03 00 00       	mov    $0x381,%eax
 8048e0c:	eb 11                	jmp    8048e1f <phase_5+0x88>
 8048e0e:	e8 4e 06 00 00       	call   8049461 <explode_bomb>
 8048e13:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e18:	eb 05                	jmp    8048e1f <phase_5+0x88>
 8048e1a:	b8 47 02 00 00       	mov    $0x247,%eax
 8048e1f:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048e23:	74 05                	je     8048e2a <phase_5+0x93>
 8048e25:	e8 37 06 00 00       	call   8049461 <explode_bomb>
 8048e2a:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048e2e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e35:	74 05                	je     8048e3c <phase_5+0xa5>
 8048e37:	e8 c4 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048e3c:	83 c4 1c             	add    $0x1c,%esp
 8048e3f:	c3                   	ret    

08048e40 <func6>:
 8048e40:	56                   	push   %esi
 8048e41:	53                   	push   %ebx
 8048e42:	83 ec 04             	sub    $0x4,%esp
 8048e45:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 8048e49:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8048e4d:	8b 74 24 18          	mov    0x18(%esp),%esi
 8048e51:	89 f0                	mov    %esi,%eax
 8048e53:	29 d8                	sub    %ebx,%eax
 8048e55:	89 c2                	mov    %eax,%edx
 8048e57:	c1 ea 1f             	shr    $0x1f,%edx
 8048e5a:	01 d0                	add    %edx,%eax
 8048e5c:	d1 f8                	sar    %eax
 8048e5e:	8d 14 18             	lea    (%eax,%ebx,1),%edx
 8048e61:	39 ca                	cmp    %ecx,%edx
 8048e63:	7e 15                	jle    8048e7a <func6+0x3a>
 8048e65:	83 ec 04             	sub    $0x4,%esp
 8048e68:	83 ea 01             	sub    $0x1,%edx
 8048e6b:	52                   	push   %edx
 8048e6c:	53                   	push   %ebx
 8048e6d:	51                   	push   %ecx
 8048e6e:	e8 cd ff ff ff       	call   8048e40 <func6>
 8048e73:	83 c4 10             	add    $0x10,%esp
 8048e76:	01 c0                	add    %eax,%eax
 8048e78:	eb 1e                	jmp    8048e98 <func6+0x58>
 8048e7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e7f:	39 ca                	cmp    %ecx,%edx
 8048e81:	7d 15                	jge    8048e98 <func6+0x58>
 8048e83:	83 ec 04             	sub    $0x4,%esp
 8048e86:	56                   	push   %esi
 8048e87:	83 c2 01             	add    $0x1,%edx
 8048e8a:	52                   	push   %edx
 8048e8b:	51                   	push   %ecx
 8048e8c:	e8 af ff ff ff       	call   8048e40 <func6>
 8048e91:	83 c4 10             	add    $0x10,%esp
 8048e94:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048e98:	83 c4 04             	add    $0x4,%esp
 8048e9b:	5b                   	pop    %ebx
 8048e9c:	5e                   	pop    %esi
 8048e9d:	c3                   	ret    

08048e9e <phase_6>:
 8048e9e:	83 ec 1c             	sub    $0x1c,%esp
 8048ea1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048ea7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048eab:	31 c0                	xor    %eax,%eax
 8048ead:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048eb1:	50                   	push   %eax
 8048eb2:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048eb6:	50                   	push   %eax
 8048eb7:	68 bd a5 04 08       	push   $0x804a5bd
 8048ebc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048ec0:	e8 eb f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048ec5:	83 c4 10             	add    $0x10,%esp
 8048ec8:	83 f8 02             	cmp    $0x2,%eax
 8048ecb:	75 07                	jne    8048ed4 <phase_6+0x36>
 8048ecd:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)
 8048ed2:	76 05                	jbe    8048ed9 <phase_6+0x3b>
 8048ed4:	e8 88 05 00 00       	call   8049461 <explode_bomb>
 8048ed9:	83 ec 04             	sub    $0x4,%esp
 8048edc:	6a 0e                	push   $0xe
 8048ede:	6a 00                	push   $0x0
 8048ee0:	ff 74 24 10          	pushl  0x10(%esp)
 8048ee4:	e8 57 ff ff ff       	call   8048e40 <func6>
 8048ee9:	83 c4 10             	add    $0x10,%esp
 8048eec:	83 f8 05             	cmp    $0x5,%eax
 8048eef:	75 07                	jne    8048ef8 <phase_6+0x5a>
 8048ef1:	83 7c 24 08 05       	cmpl   $0x5,0x8(%esp)
 8048ef6:	74 05                	je     8048efd <phase_6+0x5f>
 8048ef8:	e8 64 05 00 00       	call   8049461 <explode_bomb>
 8048efd:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048f01:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048f08:	74 05                	je     8048f0f <phase_6+0x71>
 8048f0a:	e8 f1 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f0f:	83 c4 1c             	add    $0x1c,%esp
 8048f12:	c3                   	ret    

08048f13 <phase_7>:
 8048f13:	53                   	push   %ebx
 8048f14:	83 ec 24             	sub    $0x24,%esp
 8048f17:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
 8048f1b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f21:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048f25:	31 c0                	xor    %eax,%eax
 8048f27:	53                   	push   %ebx
 8048f28:	e8 5b 02 00 00       	call   8049188 <string_length>
 8048f2d:	83 c4 10             	add    $0x10,%esp
 8048f30:	83 f8 06             	cmp    $0x6,%eax
 8048f33:	74 05                	je     8048f3a <phase_7+0x27>
 8048f35:	e8 27 05 00 00       	call   8049461 <explode_bomb>
 8048f3a:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f3f:	0f b6 14 03          	movzbl (%ebx,%eax,1),%edx
 8048f43:	83 e2 0f             	and    $0xf,%edx
 8048f46:	0f b6 92 cc a3 04 08 	movzbl 0x804a3cc(%edx),%edx
 8048f4d:	88 54 04 05          	mov    %dl,0x5(%esp,%eax,1)
 8048f51:	83 c0 01             	add    $0x1,%eax
 8048f54:	83 f8 06             	cmp    $0x6,%eax
 8048f57:	75 e6                	jne    8048f3f <phase_7+0x2c>
 8048f59:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
 8048f5e:	83 ec 08             	sub    $0x8,%esp
 8048f61:	68 57 a3 04 08       	push   $0x804a357
 8048f66:	8d 44 24 11          	lea    0x11(%esp),%eax
 8048f6a:	50                   	push   %eax
 8048f6b:	e8 37 02 00 00       	call   80491a7 <strings_not_equal>
 8048f70:	83 c4 10             	add    $0x10,%esp
 8048f73:	85 c0                	test   %eax,%eax
 8048f75:	74 05                	je     8048f7c <phase_7+0x69>
 8048f77:	e8 e5 04 00 00       	call   8049461 <explode_bomb>
 8048f7c:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048f80:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048f87:	74 05                	je     8048f8e <phase_7+0x7b>
 8048f89:	e8 72 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f8e:	83 c4 18             	add    $0x18,%esp
 8048f91:	5b                   	pop    %ebx
 8048f92:	c3                   	ret    

08048f93 <phase_8>:
 8048f93:	56                   	push   %esi
 8048f94:	53                   	push   %ebx
 8048f95:	83 ec 4c             	sub    $0x4c,%esp
 8048f98:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f9e:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048fa2:	31 c0                	xor    %eax,%eax
 8048fa4:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048fa8:	50                   	push   %eax
 8048fa9:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048fad:	e8 ec 04 00 00       	call   804949e <read_six_numbers>
 8048fb2:	83 c4 10             	add    $0x10,%esp
 8048fb5:	be 00 00 00 00       	mov    $0x0,%esi
 8048fba:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8048fbe:	83 e8 01             	sub    $0x1,%eax
 8048fc1:	83 f8 05             	cmp    $0x5,%eax
 8048fc4:	76 05                	jbe    8048fcb <phase_8+0x38>
 8048fc6:	e8 96 04 00 00       	call   8049461 <explode_bomb>
 8048fcb:	83 c6 01             	add    $0x1,%esi
 8048fce:	83 fe 06             	cmp    $0x6,%esi
 8048fd1:	74 33                	je     8049006 <phase_8+0x73>
 8048fd3:	89 f3                	mov    %esi,%ebx
 8048fd5:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048fd9:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048fdd:	75 05                	jne    8048fe4 <phase_8+0x51>
 8048fdf:	e8 7d 04 00 00       	call   8049461 <explode_bomb>
 8048fe4:	83 c3 01             	add    $0x1,%ebx
 8048fe7:	83 fb 05             	cmp    $0x5,%ebx
 8048fea:	7e e9                	jle    8048fd5 <phase_8+0x42>
 8048fec:	eb cc                	jmp    8048fba <phase_8+0x27>
 8048fee:	8b 52 08             	mov    0x8(%edx),%edx
 8048ff1:	83 c0 01             	add    $0x1,%eax
 8048ff4:	39 c8                	cmp    %ecx,%eax
 8048ff6:	75 f6                	jne    8048fee <phase_8+0x5b>
 8048ff8:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8048ffc:	83 c3 01             	add    $0x1,%ebx
 8048fff:	83 fb 06             	cmp    $0x6,%ebx
 8049002:	75 07                	jne    804900b <phase_8+0x78>
 8049004:	eb 1c                	jmp    8049022 <phase_8+0x8f>
 8049006:	bb 00 00 00 00       	mov    $0x0,%ebx
 804900b:	89 de                	mov    %ebx,%esi
 804900d:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8049011:	b8 01 00 00 00       	mov    $0x1,%eax
 8049016:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 804901b:	83 f9 01             	cmp    $0x1,%ecx
 804901e:	7f ce                	jg     8048fee <phase_8+0x5b>
 8049020:	eb d6                	jmp    8048ff8 <phase_8+0x65>
 8049022:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 8049026:	8d 44 24 24          	lea    0x24(%esp),%eax
 804902a:	8d 74 24 38          	lea    0x38(%esp),%esi
 804902e:	89 d9                	mov    %ebx,%ecx
 8049030:	8b 50 04             	mov    0x4(%eax),%edx
 8049033:	89 51 08             	mov    %edx,0x8(%ecx)
 8049036:	83 c0 04             	add    $0x4,%eax
 8049039:	89 d1                	mov    %edx,%ecx
 804903b:	39 f0                	cmp    %esi,%eax
 804903d:	75 f1                	jne    8049030 <phase_8+0x9d>
 804903f:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 8049046:	be 05 00 00 00       	mov    $0x5,%esi
 804904b:	8b 43 08             	mov    0x8(%ebx),%eax
 804904e:	8b 00                	mov    (%eax),%eax
 8049050:	39 03                	cmp    %eax,(%ebx)
 8049052:	7d 05                	jge    8049059 <phase_8+0xc6>
 8049054:	e8 08 04 00 00       	call   8049461 <explode_bomb>
 8049059:	8b 5b 08             	mov    0x8(%ebx),%ebx
 804905c:	83 ee 01             	sub    $0x1,%esi
 804905f:	75 ea                	jne    804904b <phase_8+0xb8>
 8049061:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8049065:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804906c:	74 05                	je     8049073 <phase_8+0xe0>
 804906e:	e8 8d f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049073:	83 c4 44             	add    $0x44,%esp
 8049076:	5b                   	pop    %ebx
 8049077:	5e                   	pop    %esi
 8049078:	c3                   	ret    

08049079 <fun9>:
 8049079:	53                   	push   %ebx
 804907a:	83 ec 08             	sub    $0x8,%esp
 804907d:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049081:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 8049085:	85 d2                	test   %edx,%edx
 8049087:	74 37                	je     80490c0 <fun9+0x47>
 8049089:	8b 1a                	mov    (%edx),%ebx
 804908b:	39 cb                	cmp    %ecx,%ebx
 804908d:	7e 13                	jle    80490a2 <fun9+0x29>
 804908f:	83 ec 08             	sub    $0x8,%esp
 8049092:	51                   	push   %ecx
 8049093:	ff 72 04             	pushl  0x4(%edx)
 8049096:	e8 de ff ff ff       	call   8049079 <fun9>
 804909b:	83 c4 10             	add    $0x10,%esp
 804909e:	01 c0                	add    %eax,%eax
 80490a0:	eb 23                	jmp    80490c5 <fun9+0x4c>
 80490a2:	b8 00 00 00 00       	mov    $0x0,%eax
 80490a7:	39 cb                	cmp    %ecx,%ebx
 80490a9:	74 1a                	je     80490c5 <fun9+0x4c>
 80490ab:	83 ec 08             	sub    $0x8,%esp
 80490ae:	51                   	push   %ecx
 80490af:	ff 72 08             	pushl  0x8(%edx)
 80490b2:	e8 c2 ff ff ff       	call   8049079 <fun9>
 80490b7:	83 c4 10             	add    $0x10,%esp
 80490ba:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 80490be:	eb 05                	jmp    80490c5 <fun9+0x4c>
 80490c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80490c5:	83 c4 08             	add    $0x8,%esp
 80490c8:	5b                   	pop    %ebx
 80490c9:	c3                   	ret    

080490ca <phase_9>:
 80490ca:	53                   	push   %ebx
 80490cb:	83 ec 0c             	sub    $0xc,%esp
 80490ce:	6a 0a                	push   $0xa
 80490d0:	6a 00                	push   $0x0
 80490d2:	ff 74 24 1c          	pushl  0x1c(%esp)
 80490d6:	e8 45 f8 ff ff       	call   8048920 <strtol@plt>
 80490db:	89 c3                	mov    %eax,%ebx
 80490dd:	8d 40 ff             	lea    -0x1(%eax),%eax
 80490e0:	83 c4 10             	add    $0x10,%esp
 80490e3:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 80490e8:	76 05                	jbe    80490ef <phase_9+0x25>
 80490ea:	e8 72 03 00 00       	call   8049461 <explode_bomb>
 80490ef:	83 ec 08             	sub    $0x8,%esp
 80490f2:	53                   	push   %ebx
 80490f3:	68 a0 d0 04 08       	push   $0x804d0a0
 80490f8:	e8 7c ff ff ff       	call   8049079 <fun9>
 80490fd:	83 c4 10             	add    $0x10,%esp
 8049100:	83 f8 05             	cmp    $0x5,%eax
 8049103:	74 05                	je     804910a <phase_9+0x40>
 8049105:	e8 57 03 00 00       	call   8049461 <explode_bomb>
 804910a:	83 c4 08             	add    $0x8,%esp
 804910d:	5b                   	pop    %ebx
 804910e:	c3                   	ret    

0804910f <sig_handler>:
 804910f:	83 ec 18             	sub    $0x18,%esp
 8049112:	68 dc a3 04 08       	push   $0x804a3dc
 8049117:	e8 34 f7 ff ff       	call   8048850 <puts@plt>
 804911c:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8049123:	e8 b8 f6 ff ff       	call   80487e0 <sleep@plt>
 8049128:	83 c4 08             	add    $0x8,%esp
 804912b:	68 39 a5 04 08       	push   $0x804a539
 8049130:	6a 01                	push   $0x1
 8049132:	e8 a9 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 8049137:	83 c4 04             	add    $0x4,%esp
 804913a:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 8049140:	e8 6b f6 ff ff       	call   80487b0 <fflush@plt>
 8049145:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804914c:	e8 8f f6 ff ff       	call   80487e0 <sleep@plt>
 8049151:	c7 04 24 41 a5 04 08 	movl   $0x804a541,(%esp)
 8049158:	e8 f3 f6 ff ff       	call   8048850 <puts@plt>
 804915d:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8049164:	e8 07 f7 ff ff       	call   8048870 <exit@plt>

08049169 <invalid_phase>:
 8049169:	83 ec 10             	sub    $0x10,%esp
 804916c:	ff 74 24 14          	pushl  0x14(%esp)
 8049170:	68 49 a5 04 08       	push   $0x804a549
 8049175:	6a 01                	push   $0x1
 8049177:	e8 64 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 804917c:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049183:	e8 e8 f6 ff ff       	call   8048870 <exit@plt>

08049188 <string_length>:
 8049188:	8b 54 24 04          	mov    0x4(%esp),%edx
 804918c:	80 3a 00             	cmpb   $0x0,(%edx)
 804918f:	74 10                	je     80491a1 <string_length+0x19>
 8049191:	b8 00 00 00 00       	mov    $0x0,%eax
 8049196:	83 c0 01             	add    $0x1,%eax
 8049199:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 804919d:	75 f7                	jne    8049196 <string_length+0xe>
 804919f:	f3 c3                	repz ret 
 80491a1:	b8 00 00 00 00       	mov    $0x0,%eax
 80491a6:	c3                   	ret    

080491a7 <strings_not_equal>:
 80491a7:	57                   	push   %edi
 80491a8:	56                   	push   %esi
 80491a9:	53                   	push   %ebx
 80491aa:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 80491ae:	8b 74 24 14          	mov    0x14(%esp),%esi
 80491b2:	53                   	push   %ebx
 80491b3:	e8 d0 ff ff ff       	call   8049188 <string_length>
 80491b8:	89 c7                	mov    %eax,%edi
 80491ba:	89 34 24             	mov    %esi,(%esp)
 80491bd:	e8 c6 ff ff ff       	call   8049188 <string_length>
 80491c2:	83 c4 04             	add    $0x4,%esp
 80491c5:	ba 01 00 00 00       	mov    $0x1,%edx
 80491ca:	39 c7                	cmp    %eax,%edi
 80491cc:	75 38                	jne    8049206 <strings_not_equal+0x5f>
 80491ce:	0f b6 03             	movzbl (%ebx),%eax
 80491d1:	84 c0                	test   %al,%al
 80491d3:	74 1e                	je     80491f3 <strings_not_equal+0x4c>
 80491d5:	3a 06                	cmp    (%esi),%al
 80491d7:	74 06                	je     80491df <strings_not_equal+0x38>
 80491d9:	eb 1f                	jmp    80491fa <strings_not_equal+0x53>
 80491db:	3a 06                	cmp    (%esi),%al
 80491dd:	75 22                	jne    8049201 <strings_not_equal+0x5a>
 80491df:	83 c3 01             	add    $0x1,%ebx
 80491e2:	83 c6 01             	add    $0x1,%esi
 80491e5:	0f b6 03             	movzbl (%ebx),%eax
 80491e8:	84 c0                	test   %al,%al
 80491ea:	75 ef                	jne    80491db <strings_not_equal+0x34>
 80491ec:	ba 00 00 00 00       	mov    $0x0,%edx
 80491f1:	eb 13                	jmp    8049206 <strings_not_equal+0x5f>
 80491f3:	ba 00 00 00 00       	mov    $0x0,%edx
 80491f8:	eb 0c                	jmp    8049206 <strings_not_equal+0x5f>
 80491fa:	ba 01 00 00 00       	mov    $0x1,%edx
 80491ff:	eb 05                	jmp    8049206 <strings_not_equal+0x5f>
 8049201:	ba 01 00 00 00       	mov    $0x1,%edx
 8049206:	89 d0                	mov    %edx,%eax
 8049208:	5b                   	pop    %ebx
 8049209:	5e                   	pop    %esi
 804920a:	5f                   	pop    %edi
 804920b:	c3                   	ret    

0804920c <initialize_bomb>:
 804920c:	56                   	push   %esi
 804920d:	53                   	push   %ebx
 804920e:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 8049214:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804921a:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 8049221:	31 c0                	xor    %eax,%eax
 8049223:	68 0f 91 04 08       	push   $0x804910f
 8049228:	6a 02                	push   $0x2
 804922a:	e8 a1 f5 ff ff       	call   80487d0 <signal@plt>
 804922f:	83 c4 08             	add    $0x8,%esp
 8049232:	6a 40                	push   $0x40
 8049234:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049238:	50                   	push   %eax
 8049239:	e8 e2 f5 ff ff       	call   8048820 <gethostname@plt>
 804923e:	83 c4 10             	add    $0x10,%esp
 8049241:	85 c0                	test   %eax,%eax
 8049243:	75 14                	jne    8049259 <initialize_bomb+0x4d>
 8049245:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 804924a:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 804924f:	8d 74 24 0c          	lea    0xc(%esp),%esi
 8049253:	85 c0                	test   %eax,%eax
 8049255:	75 1b                	jne    8049272 <initialize_bomb+0x66>
 8049257:	eb 56                	jmp    80492af <initialize_bomb+0xa3>
 8049259:	83 ec 0c             	sub    $0xc,%esp
 804925c:	68 14 a4 04 08       	push   $0x804a414
 8049261:	e8 ea f5 ff ff       	call   8048850 <puts@plt>
 8049266:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804926d:	e8 fe f5 ff ff       	call   8048870 <exit@plt>
 8049272:	83 ec 08             	sub    $0x8,%esp
 8049275:	56                   	push   %esi
 8049276:	50                   	push   %eax
 8049277:	e8 24 f6 ff ff       	call   80488a0 <strcasecmp@plt>
 804927c:	83 c4 10             	add    $0x10,%esp
 804927f:	85 c0                	test   %eax,%eax
 8049281:	74 45                	je     80492c8 <initialize_bomb+0xbc>
 8049283:	83 c3 04             	add    $0x4,%ebx
 8049286:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8049289:	85 c0                	test   %eax,%eax
 804928b:	75 e5                	jne    8049272 <initialize_bomb+0x66>
 804928d:	eb 20                	jmp    80492af <initialize_bomb+0xa3>
 804928f:	83 ec 04             	sub    $0x4,%esp
 8049292:	8d 44 24 50          	lea    0x50(%esp),%eax
 8049296:	50                   	push   %eax
 8049297:	68 5a a5 04 08       	push   $0x804a55a
 804929c:	6a 01                	push   $0x1
 804929e:	e8 3d f6 ff ff       	call   80488e0 <__printf_chk@plt>
 80492a3:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492aa:	e8 c1 f5 ff ff       	call   8048870 <exit@plt>
 80492af:	83 ec 0c             	sub    $0xc,%esp
 80492b2:	68 4c a4 04 08       	push   $0x804a44c
 80492b7:	e8 94 f5 ff ff       	call   8048850 <puts@plt>
 80492bc:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492c3:	e8 a8 f5 ff ff       	call   8048870 <exit@plt>
 80492c8:	83 ec 0c             	sub    $0xc,%esp
 80492cb:	8d 44 24 58          	lea    0x58(%esp),%eax
 80492cf:	50                   	push   %eax
 80492d0:	e8 29 0c 00 00       	call   8049efe <init_driver>
 80492d5:	83 c4 10             	add    $0x10,%esp
 80492d8:	85 c0                	test   %eax,%eax
 80492da:	78 b3                	js     804928f <initialize_bomb+0x83>
 80492dc:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 80492e3:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80492ea:	74 05                	je     80492f1 <initialize_bomb+0xe5>
 80492ec:	e8 0f f5 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80492f1:	81 c4 54 20 00 00    	add    $0x2054,%esp
 80492f7:	5b                   	pop    %ebx
 80492f8:	5e                   	pop    %esi
 80492f9:	c3                   	ret    

080492fa <initialize_bomb_solve>:
 80492fa:	f3 c3                	repz ret 

080492fc <blank_line>:
 80492fc:	56                   	push   %esi
 80492fd:	53                   	push   %ebx
 80492fe:	83 ec 04             	sub    $0x4,%esp
 8049301:	8b 74 24 10          	mov    0x10(%esp),%esi
 8049305:	eb 14                	jmp    804931b <blank_line+0x1f>
 8049307:	e8 44 f6 ff ff       	call   8048950 <__ctype_b_loc@plt>
 804930c:	83 c6 01             	add    $0x1,%esi
 804930f:	0f be db             	movsbl %bl,%ebx
 8049312:	8b 00                	mov    (%eax),%eax
 8049314:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049319:	74 0e                	je     8049329 <blank_line+0x2d>
 804931b:	0f b6 1e             	movzbl (%esi),%ebx
 804931e:	84 db                	test   %bl,%bl
 8049320:	75 e5                	jne    8049307 <blank_line+0xb>
 8049322:	b8 01 00 00 00       	mov    $0x1,%eax
 8049327:	eb 05                	jmp    804932e <blank_line+0x32>
 8049329:	b8 00 00 00 00       	mov    $0x0,%eax
 804932e:	83 c4 04             	add    $0x4,%esp
 8049331:	5b                   	pop    %ebx
 8049332:	5e                   	pop    %esi
 8049333:	c3                   	ret    

08049334 <skip>:
 8049334:	53                   	push   %ebx
 8049335:	83 ec 08             	sub    $0x8,%esp
 8049338:	83 ec 04             	sub    $0x4,%esp
 804933b:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 8049341:	6a 50                	push   $0x50
 8049343:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049348:	8d 04 80             	lea    (%eax,%eax,4),%eax
 804934b:	c1 e0 04             	shl    $0x4,%eax
 804934e:	05 00 d8 04 08       	add    $0x804d800,%eax
 8049353:	50                   	push   %eax
 8049354:	e8 67 f4 ff ff       	call   80487c0 <fgets@plt>
 8049359:	89 c3                	mov    %eax,%ebx
 804935b:	83 c4 10             	add    $0x10,%esp
 804935e:	85 c0                	test   %eax,%eax
 8049360:	74 10                	je     8049372 <skip+0x3e>
 8049362:	83 ec 0c             	sub    $0xc,%esp
 8049365:	50                   	push   %eax
 8049366:	e8 91 ff ff ff       	call   80492fc <blank_line>
 804936b:	83 c4 10             	add    $0x10,%esp
 804936e:	85 c0                	test   %eax,%eax
 8049370:	75 c6                	jne    8049338 <skip+0x4>
 8049372:	89 d8                	mov    %ebx,%eax
 8049374:	83 c4 08             	add    $0x8,%esp
 8049377:	5b                   	pop    %ebx
 8049378:	c3                   	ret    

08049379 <send_msg>:
 8049379:	57                   	push   %edi
 804937a:	53                   	push   %ebx
 804937b:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 8049381:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049387:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 804938e:	31 c0                	xor    %eax,%eax
 8049390:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 8049396:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 804939a:	c1 e2 04             	shl    $0x4,%edx
 804939d:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 80493a3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80493a8:	89 d7                	mov    %edx,%edi
 80493aa:	f2 ae                	repnz scas %es:(%edi),%al
 80493ac:	f7 d1                	not    %ecx
 80493ae:	83 c1 63             	add    $0x63,%ecx
 80493b1:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 80493b7:	76 1b                	jbe    80493d4 <send_msg+0x5b>
 80493b9:	83 ec 08             	sub    $0x8,%esp
 80493bc:	68 84 a4 04 08       	push   $0x804a484
 80493c1:	6a 01                	push   $0x1
 80493c3:	e8 18 f5 ff ff       	call   80488e0 <__printf_chk@plt>
 80493c8:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80493cf:	e8 9c f4 ff ff       	call   8048870 <exit@plt>
 80493d4:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 80493db:	00 
 80493dc:	b9 7c a5 04 08       	mov    $0x804a57c,%ecx
 80493e1:	b8 74 a5 04 08       	mov    $0x804a574,%eax
 80493e6:	0f 44 c1             	cmove  %ecx,%eax
 80493e9:	52                   	push   %edx
 80493ea:	53                   	push   %ebx
 80493eb:	50                   	push   %eax
 80493ec:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 80493f2:	68 85 a5 04 08       	push   $0x804a585
 80493f7:	68 00 20 00 00       	push   $0x2000
 80493fc:	6a 01                	push   $0x1
 80493fe:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 8049402:	53                   	push   %ebx
 8049403:	e8 58 f5 ff ff       	call   8048960 <__sprintf_chk@plt>
 8049408:	83 c4 20             	add    $0x20,%esp
 804940b:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 8049412:	50                   	push   %eax
 8049413:	6a 00                	push   $0x0
 8049415:	53                   	push   %ebx
 8049416:	68 a0 d1 04 08       	push   $0x804d1a0
 804941b:	e8 b0 0c 00 00       	call   804a0d0 <driver_post>
 8049420:	83 c4 10             	add    $0x10,%esp
 8049423:	85 c0                	test   %eax,%eax
 8049425:	79 1c                	jns    8049443 <send_msg+0xca>
 8049427:	83 ec 0c             	sub    $0xc,%esp
 804942a:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 8049431:	50                   	push   %eax
 8049432:	e8 19 f4 ff ff       	call   8048850 <puts@plt>
 8049437:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804943e:	e8 2d f4 ff ff       	call   8048870 <exit@plt>
 8049443:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 804944a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049451:	74 05                	je     8049458 <send_msg+0xdf>
 8049453:	e8 a8 f3 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049458:	81 c4 14 40 00 00    	add    $0x4014,%esp
 804945e:	5b                   	pop    %ebx
 804945f:	5f                   	pop    %edi
 8049460:	c3                   	ret    

08049461 <explode_bomb>:
 8049461:	83 ec 18             	sub    $0x18,%esp
 8049464:	68 91 a5 04 08       	push   $0x804a591
 8049469:	e8 e2 f3 ff ff       	call   8048850 <puts@plt>
 804946e:	c7 04 24 9a a5 04 08 	movl   $0x804a59a,(%esp)
 8049475:	e8 d6 f3 ff ff       	call   8048850 <puts@plt>
 804947a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049481:	e8 f3 fe ff ff       	call   8049379 <send_msg>
 8049486:	c7 04 24 a8 a4 04 08 	movl   $0x804a4a8,(%esp)
 804948d:	e8 be f3 ff ff       	call   8048850 <puts@plt>
 8049492:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049499:	e8 d2 f3 ff ff       	call   8048870 <exit@plt>

0804949e <read_six_numbers>:
 804949e:	83 ec 0c             	sub    $0xc,%esp
 80494a1:	8b 44 24 14          	mov    0x14(%esp),%eax
 80494a5:	8d 50 14             	lea    0x14(%eax),%edx
 80494a8:	52                   	push   %edx
 80494a9:	8d 50 10             	lea    0x10(%eax),%edx
 80494ac:	52                   	push   %edx
 80494ad:	8d 50 0c             	lea    0xc(%eax),%edx
 80494b0:	52                   	push   %edx
 80494b1:	8d 50 08             	lea    0x8(%eax),%edx
 80494b4:	52                   	push   %edx
 80494b5:	8d 50 04             	lea    0x4(%eax),%edx
 80494b8:	52                   	push   %edx
 80494b9:	50                   	push   %eax
 80494ba:	68 b1 a5 04 08       	push   $0x804a5b1
 80494bf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80494c3:	e8 e8 f3 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 80494c8:	83 c4 20             	add    $0x20,%esp
 80494cb:	83 f8 05             	cmp    $0x5,%eax
 80494ce:	7f 05                	jg     80494d5 <read_six_numbers+0x37>
 80494d0:	e8 8c ff ff ff       	call   8049461 <explode_bomb>
 80494d5:	83 c4 0c             	add    $0xc,%esp
 80494d8:	c3                   	ret    

080494d9 <read_line>:
 80494d9:	57                   	push   %edi
 80494da:	56                   	push   %esi
 80494db:	53                   	push   %ebx
 80494dc:	e8 53 fe ff ff       	call   8049334 <skip>
 80494e1:	85 c0                	test   %eax,%eax
 80494e3:	75 70                	jne    8049555 <read_line+0x7c>
 80494e5:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80494ea:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 80494f0:	75 19                	jne    804950b <read_line+0x32>
 80494f2:	83 ec 0c             	sub    $0xc,%esp
 80494f5:	68 c3 a5 04 08       	push   $0x804a5c3
 80494fa:	e8 51 f3 ff ff       	call   8048850 <puts@plt>
 80494ff:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049506:	e8 65 f3 ff ff       	call   8048870 <exit@plt>
 804950b:	83 ec 0c             	sub    $0xc,%esp
 804950e:	68 e1 a5 04 08       	push   $0x804a5e1
 8049513:	e8 18 f3 ff ff       	call   8048830 <getenv@plt>
 8049518:	83 c4 10             	add    $0x10,%esp
 804951b:	85 c0                	test   %eax,%eax
 804951d:	74 0a                	je     8049529 <read_line+0x50>
 804951f:	83 ec 0c             	sub    $0xc,%esp
 8049522:	6a 00                	push   $0x0
 8049524:	e8 47 f3 ff ff       	call   8048870 <exit@plt>
 8049529:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 804952e:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8049533:	e8 fc fd ff ff       	call   8049334 <skip>
 8049538:	85 c0                	test   %eax,%eax
 804953a:	75 19                	jne    8049555 <read_line+0x7c>
 804953c:	83 ec 0c             	sub    $0xc,%esp
 804953f:	68 c3 a5 04 08       	push   $0x804a5c3
 8049544:	e8 07 f3 ff ff       	call   8048850 <puts@plt>
 8049549:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049550:	e8 1b f3 ff ff       	call   8048870 <exit@plt>
 8049555:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 804955b:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 804955e:	c1 e3 04             	shl    $0x4,%ebx
 8049561:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 8049567:	b8 00 00 00 00       	mov    $0x0,%eax
 804956c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049571:	89 df                	mov    %ebx,%edi
 8049573:	f2 ae                	repnz scas %es:(%edi),%al
 8049575:	f7 d1                	not    %ecx
 8049577:	83 e9 01             	sub    $0x1,%ecx
 804957a:	83 f9 4e             	cmp    $0x4e,%ecx
 804957d:	7e 36                	jle    80495b5 <read_line+0xdc>
 804957f:	83 ec 0c             	sub    $0xc,%esp
 8049582:	68 ec a5 04 08       	push   $0x804a5ec
 8049587:	e8 c4 f2 ff ff       	call   8048850 <puts@plt>
 804958c:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049591:	8d 50 01             	lea    0x1(%eax),%edx
 8049594:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 804959a:	6b c0 50             	imul   $0x50,%eax,%eax
 804959d:	05 00 d8 04 08       	add    $0x804d800,%eax
 80495a2:	be 07 a6 04 08       	mov    $0x804a607,%esi
 80495a7:	b9 04 00 00 00       	mov    $0x4,%ecx
 80495ac:	89 c7                	mov    %eax,%edi
 80495ae:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80495b0:	e8 ac fe ff ff       	call   8049461 <explode_bomb>
 80495b5:	8d 04 92             	lea    (%edx,%edx,4),%eax
 80495b8:	c1 e0 04             	shl    $0x4,%eax
 80495bb:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 80495c2:	00 
 80495c3:	83 c2 01             	add    $0x1,%edx
 80495c6:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 80495cc:	89 d8                	mov    %ebx,%eax
 80495ce:	5b                   	pop    %ebx
 80495cf:	5e                   	pop    %esi
 80495d0:	5f                   	pop    %edi
 80495d1:	c3                   	ret    

080495d2 <phase_defused>:
 80495d2:	83 ec 18             	sub    $0x18,%esp
 80495d5:	6a 01                	push   $0x1
 80495d7:	e8 9d fd ff ff       	call   8049379 <send_msg>
 80495dc:	83 c4 10             	add    $0x10,%esp
 80495df:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 80495e6:	75 1c                	jne    8049604 <phase_defused+0x32>
 80495e8:	83 ec 0c             	sub    $0xc,%esp
 80495eb:	68 cc a4 04 08       	push   $0x804a4cc
 80495f0:	e8 5b f2 ff ff       	call   8048850 <puts@plt>
 80495f5:	c7 04 24 f8 a4 04 08 	movl   $0x804a4f8,(%esp)
 80495fc:	e8 4f f2 ff ff       	call   8048850 <puts@plt>
 8049601:	83 c4 10             	add    $0x10,%esp
 8049604:	83 c4 0c             	add    $0xc,%esp
 8049607:	c3                   	ret    

08049608 <sigalrm_handler>:
 8049608:	83 ec 0c             	sub    $0xc,%esp
 804960b:	6a 00                	push   $0x0
 804960d:	68 00 aa 04 08       	push   $0x804aa00
 8049612:	6a 01                	push   $0x1
 8049614:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 804961a:	e8 e1 f2 ff ff       	call   8048900 <__fprintf_chk@plt>
 804961f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049626:	e8 45 f2 ff ff       	call   8048870 <exit@plt>

0804962b <rio_readlineb>:
 804962b:	55                   	push   %ebp
 804962c:	57                   	push   %edi
 804962d:	56                   	push   %esi
 804962e:	53                   	push   %ebx
 804962f:	83 ec 2c             	sub    $0x2c,%esp
 8049632:	89 d7                	mov    %edx,%edi
 8049634:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8049638:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 804963f:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 8049643:	31 d2                	xor    %edx,%edx
 8049645:	83 f9 01             	cmp    $0x1,%ecx
 8049648:	76 79                	jbe    80496c3 <rio_readlineb+0x98>
 804964a:	89 c3                	mov    %eax,%ebx
 804964c:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8049650:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049655:	8d 73 0c             	lea    0xc(%ebx),%esi
 8049658:	eb 2d                	jmp    8049687 <rio_readlineb+0x5c>
 804965a:	83 ec 04             	sub    $0x4,%esp
 804965d:	68 00 20 00 00       	push   $0x2000
 8049662:	56                   	push   %esi
 8049663:	ff 33                	pushl  (%ebx)
 8049665:	e8 36 f1 ff ff       	call   80487a0 <read@plt>
 804966a:	89 43 04             	mov    %eax,0x4(%ebx)
 804966d:	83 c4 10             	add    $0x10,%esp
 8049670:	85 c0                	test   %eax,%eax
 8049672:	79 0c                	jns    8049680 <rio_readlineb+0x55>
 8049674:	e8 57 f2 ff ff       	call   80488d0 <__errno_location@plt>
 8049679:	83 38 04             	cmpl   $0x4,(%eax)
 804967c:	74 09                	je     8049687 <rio_readlineb+0x5c>
 804967e:	eb 62                	jmp    80496e2 <rio_readlineb+0xb7>
 8049680:	85 c0                	test   %eax,%eax
 8049682:	74 63                	je     80496e7 <rio_readlineb+0xbc>
 8049684:	89 73 08             	mov    %esi,0x8(%ebx)
 8049687:	8b 43 04             	mov    0x4(%ebx),%eax
 804968a:	85 c0                	test   %eax,%eax
 804968c:	7e cc                	jle    804965a <rio_readlineb+0x2f>
 804968e:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049691:	0f b6 11             	movzbl (%ecx),%edx
 8049694:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 8049698:	83 c1 01             	add    $0x1,%ecx
 804969b:	89 4b 08             	mov    %ecx,0x8(%ebx)
 804969e:	83 e8 01             	sub    $0x1,%eax
 80496a1:	89 43 04             	mov    %eax,0x4(%ebx)
 80496a4:	83 c7 01             	add    $0x1,%edi
 80496a7:	88 57 ff             	mov    %dl,-0x1(%edi)
 80496aa:	80 fa 0a             	cmp    $0xa,%dl
 80496ad:	75 09                	jne    80496b8 <rio_readlineb+0x8d>
 80496af:	eb 1d                	jmp    80496ce <rio_readlineb+0xa3>
 80496b1:	83 fd 01             	cmp    $0x1,%ebp
 80496b4:	75 18                	jne    80496ce <rio_readlineb+0xa3>
 80496b6:	eb 1b                	jmp    80496d3 <rio_readlineb+0xa8>
 80496b8:	83 c5 01             	add    $0x1,%ebp
 80496bb:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 80496bf:	74 09                	je     80496ca <rio_readlineb+0x9f>
 80496c1:	eb c4                	jmp    8049687 <rio_readlineb+0x5c>
 80496c3:	bd 01 00 00 00       	mov    $0x1,%ebp
 80496c8:	eb 04                	jmp    80496ce <rio_readlineb+0xa3>
 80496ca:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 80496ce:	c6 07 00             	movb   $0x0,(%edi)
 80496d1:	89 e8                	mov    %ebp,%eax
 80496d3:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80496d7:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80496de:	74 17                	je     80496f7 <rio_readlineb+0xcc>
 80496e0:	eb 10                	jmp    80496f2 <rio_readlineb+0xc7>
 80496e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496e7:	85 c0                	test   %eax,%eax
 80496e9:	74 c6                	je     80496b1 <rio_readlineb+0x86>
 80496eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496f0:	eb e1                	jmp    80496d3 <rio_readlineb+0xa8>
 80496f2:	e8 09 f1 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80496f7:	83 c4 2c             	add    $0x2c,%esp
 80496fa:	5b                   	pop    %ebx
 80496fb:	5e                   	pop    %esi
 80496fc:	5f                   	pop    %edi
 80496fd:	5d                   	pop    %ebp
 80496fe:	c3                   	ret    

080496ff <submitr>:
 80496ff:	55                   	push   %ebp
 8049700:	57                   	push   %edi
 8049701:	56                   	push   %esi
 8049702:	53                   	push   %ebx
 8049703:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 8049709:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 8049710:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 8049717:	89 44 24 10          	mov    %eax,0x10(%esp)
 804971b:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 8049722:	89 44 24 14          	mov    %eax,0x14(%esp)
 8049726:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 804972d:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049731:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 8049738:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 804973f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8049743:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049749:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 8049750:	31 c0                	xor    %eax,%eax
 8049752:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049759:	00 
 804975a:	6a 00                	push   $0x0
 804975c:	6a 01                	push   $0x1
 804975e:	6a 02                	push   $0x2
 8049760:	e8 8b f1 ff ff       	call   80488f0 <socket@plt>
 8049765:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049769:	83 c4 10             	add    $0x10,%esp
 804976c:	85 c0                	test   %eax,%eax
 804976e:	79 52                	jns    80497c2 <submitr+0xc3>
 8049770:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049774:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804977a:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049781:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049788:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 804978f:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049796:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804979d:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 80497a4:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 80497ab:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 80497b2:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 80497b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80497bd:	e9 3f 06 00 00       	jmp    8049e01 <submitr+0x702>
 80497c2:	83 ec 0c             	sub    $0xc,%esp
 80497c5:	56                   	push   %esi
 80497c6:	e8 45 f1 ff ff       	call   8048910 <gethostbyname@plt>
 80497cb:	83 c4 10             	add    $0x10,%esp
 80497ce:	85 c0                	test   %eax,%eax
 80497d0:	75 73                	jne    8049845 <submitr+0x146>
 80497d2:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497d6:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497dc:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 80497e3:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 80497ea:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 80497f1:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80497f8:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80497ff:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 8049806:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 804980d:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049814:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 804981b:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 8049822:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 8049828:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 804982c:	83 ec 0c             	sub    $0xc,%esp
 804982f:	ff 74 24 14          	pushl  0x14(%esp)
 8049833:	e8 08 f1 ff ff       	call   8048940 <close@plt>
 8049838:	83 c4 10             	add    $0x10,%esp
 804983b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049840:	e9 bc 05 00 00       	jmp    8049e01 <submitr+0x702>
 8049845:	8d 74 24 30          	lea    0x30(%esp),%esi
 8049849:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049850:	00 
 8049851:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 8049858:	00 
 8049859:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049860:	00 
 8049861:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 8049868:	00 
 8049869:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049870:	6a 0c                	push   $0xc
 8049872:	ff 70 0c             	pushl  0xc(%eax)
 8049875:	8b 40 10             	mov    0x10(%eax),%eax
 8049878:	ff 30                	pushl  (%eax)
 804987a:	8d 44 24 40          	lea    0x40(%esp),%eax
 804987e:	50                   	push   %eax
 804987f:	e8 dc ef ff ff       	call   8048860 <__memmove_chk@plt>
 8049884:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 804988b:	00 
 804988c:	66 c1 c8 08          	ror    $0x8,%ax
 8049890:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 8049895:	83 c4 0c             	add    $0xc,%esp
 8049898:	6a 10                	push   $0x10
 804989a:	56                   	push   %esi
 804989b:	ff 74 24 14          	pushl  0x14(%esp)
 804989f:	e8 8c f0 ff ff       	call   8048930 <connect@plt>
 80498a4:	83 c4 10             	add    $0x10,%esp
 80498a7:	85 c0                	test   %eax,%eax
 80498a9:	79 65                	jns    8049910 <submitr+0x211>
 80498ab:	8b 44 24 18          	mov    0x18(%esp),%eax
 80498af:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80498b5:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 80498bc:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 80498c3:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 80498ca:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 80498d1:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 80498d8:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 80498df:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 80498e6:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80498ed:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 80498f3:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 80498f7:	83 ec 0c             	sub    $0xc,%esp
 80498fa:	ff 74 24 14          	pushl  0x14(%esp)
 80498fe:	e8 3d f0 ff ff       	call   8048940 <close@plt>
 8049903:	83 c4 10             	add    $0x10,%esp
 8049906:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804990b:	e9 f1 04 00 00       	jmp    8049e01 <submitr+0x702>
 8049910:	be ff ff ff ff       	mov    $0xffffffff,%esi
 8049915:	b8 00 00 00 00       	mov    $0x0,%eax
 804991a:	89 f1                	mov    %esi,%ecx
 804991c:	89 df                	mov    %ebx,%edi
 804991e:	f2 ae                	repnz scas %es:(%edi),%al
 8049920:	f7 d1                	not    %ecx
 8049922:	89 cd                	mov    %ecx,%ebp
 8049924:	89 f1                	mov    %esi,%ecx
 8049926:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 804992a:	f2 ae                	repnz scas %es:(%edi),%al
 804992c:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8049930:	89 f1                	mov    %esi,%ecx
 8049932:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8049936:	f2 ae                	repnz scas %es:(%edi),%al
 8049938:	89 ca                	mov    %ecx,%edx
 804993a:	f7 d2                	not    %edx
 804993c:	89 f1                	mov    %esi,%ecx
 804993e:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8049942:	f2 ae                	repnz scas %es:(%edi),%al
 8049944:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 8049948:	29 ca                	sub    %ecx,%edx
 804994a:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 804994e:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 8049952:	3d 00 20 00 00       	cmp    $0x2000,%eax
 8049957:	76 7e                	jbe    80499d7 <submitr+0x2d8>
 8049959:	8b 44 24 18          	mov    0x18(%esp),%eax
 804995d:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049963:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 804996a:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049971:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049978:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 804997f:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049986:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 804998d:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049994:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 804999b:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 80499a2:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 80499a9:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 80499b0:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 80499b7:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 80499be:	83 ec 0c             	sub    $0xc,%esp
 80499c1:	ff 74 24 14          	pushl  0x14(%esp)
 80499c5:	e8 76 ef ff ff       	call   8048940 <close@plt>
 80499ca:	83 c4 10             	add    $0x10,%esp
 80499cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499d2:	e9 2a 04 00 00       	jmp    8049e01 <submitr+0x702>
 80499d7:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80499de:	b9 00 08 00 00       	mov    $0x800,%ecx
 80499e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80499e8:	89 d7                	mov    %edx,%edi
 80499ea:	f3 ab                	rep stos %eax,%es:(%edi)
 80499ec:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80499f1:	89 df                	mov    %ebx,%edi
 80499f3:	f2 ae                	repnz scas %es:(%edi),%al
 80499f5:	f7 d1                	not    %ecx
 80499f7:	89 ce                	mov    %ecx,%esi
 80499f9:	83 ee 01             	sub    $0x1,%esi
 80499fc:	0f 84 5c 04 00 00    	je     8049e5e <submitr+0x75f>
 8049a02:	89 d5                	mov    %edx,%ebp
 8049a04:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 8049a09:	0f b6 13             	movzbl (%ebx),%edx
 8049a0c:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 8049a0f:	b8 01 00 00 00       	mov    $0x1,%eax
 8049a14:	80 f9 0f             	cmp    $0xf,%cl
 8049a17:	77 0a                	ja     8049a23 <submitr+0x324>
 8049a19:	89 f8                	mov    %edi,%eax
 8049a1b:	d3 e8                	shr    %cl,%eax
 8049a1d:	83 f0 01             	xor    $0x1,%eax
 8049a20:	83 e0 01             	and    $0x1,%eax
 8049a23:	80 fa 5f             	cmp    $0x5f,%dl
 8049a26:	0f 94 c1             	sete   %cl
 8049a29:	38 c1                	cmp    %al,%cl
 8049a2b:	73 0c                	jae    8049a39 <submitr+0x33a>
 8049a2d:	89 d0                	mov    %edx,%eax
 8049a2f:	83 e0 df             	and    $0xffffffdf,%eax
 8049a32:	83 e8 41             	sub    $0x41,%eax
 8049a35:	3c 19                	cmp    $0x19,%al
 8049a37:	77 08                	ja     8049a41 <submitr+0x342>
 8049a39:	88 55 00             	mov    %dl,0x0(%ebp)
 8049a3c:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049a3f:	eb 62                	jmp    8049aa3 <submitr+0x3a4>
 8049a41:	80 fa 20             	cmp    $0x20,%dl
 8049a44:	75 09                	jne    8049a4f <submitr+0x350>
 8049a46:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049a4a:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049a4d:	eb 54                	jmp    8049aa3 <submitr+0x3a4>
 8049a4f:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049a52:	3c 5f                	cmp    $0x5f,%al
 8049a54:	76 09                	jbe    8049a5f <submitr+0x360>
 8049a56:	80 fa 09             	cmp    $0x9,%dl
 8049a59:	0f 85 bb 03 00 00    	jne    8049e1a <submitr+0x71b>
 8049a5f:	83 ec 0c             	sub    $0xc,%esp
 8049a62:	0f b6 d2             	movzbl %dl,%edx
 8049a65:	52                   	push   %edx
 8049a66:	68 0c ab 04 08       	push   $0x804ab0c
 8049a6b:	6a 08                	push   $0x8
 8049a6d:	6a 01                	push   $0x1
 8049a6f:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049a76:	50                   	push   %eax
 8049a77:	e8 e4 ee ff ff       	call   8048960 <__sprintf_chk@plt>
 8049a7c:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049a83:	00 
 8049a84:	88 45 00             	mov    %al,0x0(%ebp)
 8049a87:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049a8e:	00 
 8049a8f:	88 45 01             	mov    %al,0x1(%ebp)
 8049a92:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049a99:	00 
 8049a9a:	88 45 02             	mov    %al,0x2(%ebp)
 8049a9d:	83 c4 20             	add    $0x20,%esp
 8049aa0:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049aa3:	83 c3 01             	add    $0x1,%ebx
 8049aa6:	83 ee 01             	sub    $0x1,%esi
 8049aa9:	0f 85 5a ff ff ff    	jne    8049a09 <submitr+0x30a>
 8049aaf:	e9 aa 03 00 00       	jmp    8049e5e <submitr+0x75f>
 8049ab4:	83 ec 04             	sub    $0x4,%esp
 8049ab7:	53                   	push   %ebx
 8049ab8:	56                   	push   %esi
 8049ab9:	55                   	push   %ebp
 8049aba:	e8 d1 ed ff ff       	call   8048890 <write@plt>
 8049abf:	83 c4 10             	add    $0x10,%esp
 8049ac2:	85 c0                	test   %eax,%eax
 8049ac4:	7f 0f                	jg     8049ad5 <submitr+0x3d6>
 8049ac6:	e8 05 ee ff ff       	call   80488d0 <__errno_location@plt>
 8049acb:	83 38 04             	cmpl   $0x4,(%eax)
 8049ace:	75 0f                	jne    8049adf <submitr+0x3e0>
 8049ad0:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ad5:	01 c6                	add    %eax,%esi
 8049ad7:	29 c3                	sub    %eax,%ebx
 8049ad9:	75 d9                	jne    8049ab4 <submitr+0x3b5>
 8049adb:	85 ff                	test   %edi,%edi
 8049add:	79 69                	jns    8049b48 <submitr+0x449>
 8049adf:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049ae3:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049ae9:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049af0:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049af7:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049afe:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b05:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b0c:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049b13:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049b1a:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049b21:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049b28:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049b2f:	83 ec 0c             	sub    $0xc,%esp
 8049b32:	ff 74 24 14          	pushl  0x14(%esp)
 8049b36:	e8 05 ee ff ff       	call   8048940 <close@plt>
 8049b3b:	83 c4 10             	add    $0x10,%esp
 8049b3e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b43:	e9 b9 02 00 00       	jmp    8049e01 <submitr+0x702>
 8049b48:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049b4c:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049b50:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049b57:	00 
 8049b58:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049b5c:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049b60:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049b65:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049b6c:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049b70:	e8 b6 fa ff ff       	call   804962b <rio_readlineb>
 8049b75:	85 c0                	test   %eax,%eax
 8049b77:	7f 7d                	jg     8049bf6 <submitr+0x4f7>
 8049b79:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b7d:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b83:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b8a:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b91:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b98:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b9f:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049ba6:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049bad:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049bb4:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049bbb:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049bc2:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049bc9:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049bd0:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049bd7:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049bdd:	83 ec 0c             	sub    $0xc,%esp
 8049be0:	ff 74 24 14          	pushl  0x14(%esp)
 8049be4:	e8 57 ed ff ff       	call   8048940 <close@plt>
 8049be9:	83 c4 10             	add    $0x10,%esp
 8049bec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049bf1:	e9 0b 02 00 00       	jmp    8049e01 <submitr+0x702>
 8049bf6:	83 ec 0c             	sub    $0xc,%esp
 8049bf9:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049c00:	50                   	push   %eax
 8049c01:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c05:	50                   	push   %eax
 8049c06:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049c0d:	50                   	push   %eax
 8049c0e:	68 13 ab 04 08       	push   $0x804ab13
 8049c13:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049c1a:	50                   	push   %eax
 8049c1b:	e8 90 ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049c20:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049c24:	83 c4 20             	add    $0x20,%esp
 8049c27:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049c2c:	0f 84 c4 00 00 00    	je     8049cf6 <submitr+0x5f7>
 8049c32:	83 ec 08             	sub    $0x8,%esp
 8049c35:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049c3c:	52                   	push   %edx
 8049c3d:	50                   	push   %eax
 8049c3e:	68 24 aa 04 08       	push   $0x804aa24
 8049c43:	6a ff                	push   $0xffffffff
 8049c45:	6a 01                	push   $0x1
 8049c47:	ff 74 24 34          	pushl  0x34(%esp)
 8049c4b:	e8 10 ed ff ff       	call   8048960 <__sprintf_chk@plt>
 8049c50:	83 c4 14             	add    $0x14,%esp
 8049c53:	ff 74 24 14          	pushl  0x14(%esp)
 8049c57:	e8 e4 ec ff ff       	call   8048940 <close@plt>
 8049c5c:	83 c4 10             	add    $0x10,%esp
 8049c5f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c64:	e9 98 01 00 00       	jmp    8049e01 <submitr+0x702>
 8049c69:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049c6e:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049c75:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c79:	e8 ad f9 ff ff       	call   804962b <rio_readlineb>
 8049c7e:	85 c0                	test   %eax,%eax
 8049c80:	7f 74                	jg     8049cf6 <submitr+0x5f7>
 8049c82:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c86:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c8c:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c93:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049c9a:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049ca1:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049ca8:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049caf:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049cb6:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049cbd:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049cc4:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049ccb:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049cd2:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049cd9:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049cdd:	83 ec 0c             	sub    $0xc,%esp
 8049ce0:	ff 74 24 14          	pushl  0x14(%esp)
 8049ce4:	e8 57 ec ff ff       	call   8048940 <close@plt>
 8049ce9:	83 c4 10             	add    $0x10,%esp
 8049cec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cf1:	e9 0b 01 00 00       	jmp    8049e01 <submitr+0x702>
 8049cf6:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049cfd:	0d 
 8049cfe:	0f 85 65 ff ff ff    	jne    8049c69 <submitr+0x56a>
 8049d04:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049d0b:	0a 
 8049d0c:	0f 85 57 ff ff ff    	jne    8049c69 <submitr+0x56a>
 8049d12:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049d19:	00 
 8049d1a:	0f 85 49 ff ff ff    	jne    8049c69 <submitr+0x56a>
 8049d20:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049d25:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049d2c:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049d30:	e8 f6 f8 ff ff       	call   804962b <rio_readlineb>
 8049d35:	85 c0                	test   %eax,%eax
 8049d37:	7f 7b                	jg     8049db4 <submitr+0x6b5>
 8049d39:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d3d:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049d43:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049d4a:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049d51:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049d58:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d5f:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d66:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d6d:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049d74:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049d7b:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049d82:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049d89:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049d90:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049d97:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049d9e:	83 ec 0c             	sub    $0xc,%esp
 8049da1:	ff 74 24 14          	pushl  0x14(%esp)
 8049da5:	e8 96 eb ff ff       	call   8048940 <close@plt>
 8049daa:	83 c4 10             	add    $0x10,%esp
 8049dad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049db2:	eb 4d                	jmp    8049e01 <submitr+0x702>
 8049db4:	83 ec 08             	sub    $0x8,%esp
 8049db7:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049dbe:	50                   	push   %eax
 8049dbf:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049dc3:	57                   	push   %edi
 8049dc4:	e8 47 ea ff ff       	call   8048810 <strcpy@plt>
 8049dc9:	83 c4 04             	add    $0x4,%esp
 8049dcc:	ff 74 24 14          	pushl  0x14(%esp)
 8049dd0:	e8 6b eb ff ff       	call   8048940 <close@plt>
 8049dd5:	0f b6 17             	movzbl (%edi),%edx
 8049dd8:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049ddd:	83 c4 10             	add    $0x10,%esp
 8049de0:	29 d0                	sub    %edx,%eax
 8049de2:	75 13                	jne    8049df7 <submitr+0x6f8>
 8049de4:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049de8:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049ded:	29 d0                	sub    %edx,%eax
 8049def:	75 06                	jne    8049df7 <submitr+0x6f8>
 8049df1:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049df5:	f7 d8                	neg    %eax
 8049df7:	85 c0                	test   %eax,%eax
 8049df9:	0f 95 c0             	setne  %al
 8049dfc:	0f b6 c0             	movzbl %al,%eax
 8049dff:	f7 d8                	neg    %eax
 8049e01:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049e08:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049e0f:	0f 84 a9 00 00 00    	je     8049ebe <submitr+0x7bf>
 8049e15:	e9 9f 00 00 00       	jmp    8049eb9 <submitr+0x7ba>
 8049e1a:	a1 54 aa 04 08       	mov    0x804aa54,%eax
 8049e1f:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049e23:	89 07                	mov    %eax,(%edi)
 8049e25:	a1 93 aa 04 08       	mov    0x804aa93,%eax
 8049e2a:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049e2d:	89 f8                	mov    %edi,%eax
 8049e2f:	83 c7 04             	add    $0x4,%edi
 8049e32:	83 e7 fc             	and    $0xfffffffc,%edi
 8049e35:	29 f8                	sub    %edi,%eax
 8049e37:	be 54 aa 04 08       	mov    $0x804aa54,%esi
 8049e3c:	29 c6                	sub    %eax,%esi
 8049e3e:	83 c0 43             	add    $0x43,%eax
 8049e41:	c1 e8 02             	shr    $0x2,%eax
 8049e44:	89 c1                	mov    %eax,%ecx
 8049e46:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049e48:	83 ec 0c             	sub    $0xc,%esp
 8049e4b:	ff 74 24 14          	pushl  0x14(%esp)
 8049e4f:	e8 ec ea ff ff       	call   8048940 <close@plt>
 8049e54:	83 c4 10             	add    $0x10,%esp
 8049e57:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e5c:	eb a3                	jmp    8049e01 <submitr+0x702>
 8049e5e:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049e65:	50                   	push   %eax
 8049e66:	ff 74 24 18          	pushl  0x18(%esp)
 8049e6a:	ff 74 24 18          	pushl  0x18(%esp)
 8049e6e:	ff 74 24 18          	pushl  0x18(%esp)
 8049e72:	68 98 aa 04 08       	push   $0x804aa98
 8049e77:	68 00 20 00 00       	push   $0x2000
 8049e7c:	6a 01                	push   $0x1
 8049e7e:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049e85:	57                   	push   %edi
 8049e86:	e8 d5 ea ff ff       	call   8048960 <__sprintf_chk@plt>
 8049e8b:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e90:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049e95:	f2 ae                	repnz scas %es:(%edi),%al
 8049e97:	f7 d1                	not    %ecx
 8049e99:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049e9c:	83 c4 20             	add    $0x20,%esp
 8049e9f:	89 fb                	mov    %edi,%ebx
 8049ea1:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049ea8:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049eac:	85 ff                	test   %edi,%edi
 8049eae:	0f 85 00 fc ff ff    	jne    8049ab4 <submitr+0x3b5>
 8049eb4:	e9 8f fc ff ff       	jmp    8049b48 <submitr+0x449>
 8049eb9:	e8 42 e9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049ebe:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049ec4:	5b                   	pop    %ebx
 8049ec5:	5e                   	pop    %esi
 8049ec6:	5f                   	pop    %edi
 8049ec7:	5d                   	pop    %ebp
 8049ec8:	c3                   	ret    

08049ec9 <init_timeout>:
 8049ec9:	53                   	push   %ebx
 8049eca:	83 ec 08             	sub    $0x8,%esp
 8049ecd:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049ed1:	85 db                	test   %ebx,%ebx
 8049ed3:	74 24                	je     8049ef9 <init_timeout+0x30>
 8049ed5:	83 ec 08             	sub    $0x8,%esp
 8049ed8:	68 08 96 04 08       	push   $0x8049608
 8049edd:	6a 0e                	push   $0xe
 8049edf:	e8 ec e8 ff ff       	call   80487d0 <signal@plt>
 8049ee4:	85 db                	test   %ebx,%ebx
 8049ee6:	b8 00 00 00 00       	mov    $0x0,%eax
 8049eeb:	0f 48 d8             	cmovs  %eax,%ebx
 8049eee:	89 1c 24             	mov    %ebx,(%esp)
 8049ef1:	e8 fa e8 ff ff       	call   80487f0 <alarm@plt>
 8049ef6:	83 c4 10             	add    $0x10,%esp
 8049ef9:	83 c4 08             	add    $0x8,%esp
 8049efc:	5b                   	pop    %ebx
 8049efd:	c3                   	ret    

08049efe <init_driver>:
 8049efe:	57                   	push   %edi
 8049eff:	56                   	push   %esi
 8049f00:	53                   	push   %ebx
 8049f01:	83 ec 28             	sub    $0x28,%esp
 8049f04:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049f08:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049f0e:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049f12:	31 c0                	xor    %eax,%eax
 8049f14:	6a 01                	push   $0x1
 8049f16:	6a 0d                	push   $0xd
 8049f18:	e8 b3 e8 ff ff       	call   80487d0 <signal@plt>
 8049f1d:	83 c4 08             	add    $0x8,%esp
 8049f20:	6a 01                	push   $0x1
 8049f22:	6a 1d                	push   $0x1d
 8049f24:	e8 a7 e8 ff ff       	call   80487d0 <signal@plt>
 8049f29:	83 c4 08             	add    $0x8,%esp
 8049f2c:	6a 01                	push   $0x1
 8049f2e:	6a 1d                	push   $0x1d
 8049f30:	e8 9b e8 ff ff       	call   80487d0 <signal@plt>
 8049f35:	83 c4 0c             	add    $0xc,%esp
 8049f38:	6a 00                	push   $0x0
 8049f3a:	6a 01                	push   $0x1
 8049f3c:	6a 02                	push   $0x2
 8049f3e:	e8 ad e9 ff ff       	call   80488f0 <socket@plt>
 8049f43:	83 c4 10             	add    $0x10,%esp
 8049f46:	85 c0                	test   %eax,%eax
 8049f48:	79 4e                	jns    8049f98 <init_driver+0x9a>
 8049f4a:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049f50:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049f57:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049f5e:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049f65:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f6c:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f73:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049f7a:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049f81:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049f88:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049f8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049f93:	e9 1f 01 00 00       	jmp    804a0b7 <init_driver+0x1b9>
 8049f98:	89 c3                	mov    %eax,%ebx
 8049f9a:	83 ec 0c             	sub    $0xc,%esp
 8049f9d:	68 24 ab 04 08       	push   $0x804ab24
 8049fa2:	e8 69 e9 ff ff       	call   8048910 <gethostbyname@plt>
 8049fa7:	83 c4 10             	add    $0x10,%esp
 8049faa:	85 c0                	test   %eax,%eax
 8049fac:	75 6c                	jne    804a01a <init_driver+0x11c>
 8049fae:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049fb4:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049fbb:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049fc2:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049fc9:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049fd0:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049fd7:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049fde:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049fe5:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049fec:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049ff3:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049ffa:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a000:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a004:	83 ec 0c             	sub    $0xc,%esp
 804a007:	53                   	push   %ebx
 804a008:	e8 33 e9 ff ff       	call   8048940 <close@plt>
 804a00d:	83 c4 10             	add    $0x10,%esp
 804a010:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a015:	e9 9d 00 00 00       	jmp    804a0b7 <init_driver+0x1b9>
 804a01a:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 804a01e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a025:	00 
 804a026:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a02d:	00 
 804a02e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a035:	00 
 804a036:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a03d:	00 
 804a03e:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 804a045:	6a 0c                	push   $0xc
 804a047:	ff 70 0c             	pushl  0xc(%eax)
 804a04a:	8b 40 10             	mov    0x10(%eax),%eax
 804a04d:	ff 30                	pushl  (%eax)
 804a04f:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804a053:	50                   	push   %eax
 804a054:	e8 07 e8 ff ff       	call   8048860 <__memmove_chk@plt>
 804a059:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a060:	83 c4 0c             	add    $0xc,%esp
 804a063:	6a 10                	push   $0x10
 804a065:	57                   	push   %edi
 804a066:	53                   	push   %ebx
 804a067:	e8 c4 e8 ff ff       	call   8048930 <connect@plt>
 804a06c:	83 c4 10             	add    $0x10,%esp
 804a06f:	85 c0                	test   %eax,%eax
 804a071:	79 2a                	jns    804a09d <init_driver+0x19f>
 804a073:	83 ec 0c             	sub    $0xc,%esp
 804a076:	68 24 ab 04 08       	push   $0x804ab24
 804a07b:	68 e4 aa 04 08       	push   $0x804aae4
 804a080:	6a ff                	push   $0xffffffff
 804a082:	6a 01                	push   $0x1
 804a084:	56                   	push   %esi
 804a085:	e8 d6 e8 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a08a:	83 c4 14             	add    $0x14,%esp
 804a08d:	53                   	push   %ebx
 804a08e:	e8 ad e8 ff ff       	call   8048940 <close@plt>
 804a093:	83 c4 10             	add    $0x10,%esp
 804a096:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a09b:	eb 1a                	jmp    804a0b7 <init_driver+0x1b9>
 804a09d:	83 ec 0c             	sub    $0xc,%esp
 804a0a0:	53                   	push   %ebx
 804a0a1:	e8 9a e8 ff ff       	call   8048940 <close@plt>
 804a0a6:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a0ab:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a0af:	83 c4 10             	add    $0x10,%esp
 804a0b2:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0b7:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a0bb:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a0c2:	74 05                	je     804a0c9 <init_driver+0x1cb>
 804a0c4:	e8 37 e7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a0c9:	83 c4 20             	add    $0x20,%esp
 804a0cc:	5b                   	pop    %ebx
 804a0cd:	5e                   	pop    %esi
 804a0ce:	5f                   	pop    %edi
 804a0cf:	c3                   	ret    

0804a0d0 <driver_post>:
 804a0d0:	53                   	push   %ebx
 804a0d1:	83 ec 08             	sub    $0x8,%esp
 804a0d4:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a0d8:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a0dc:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a0e1:	74 26                	je     804a109 <driver_post+0x39>
 804a0e3:	83 ec 04             	sub    $0x4,%esp
 804a0e6:	ff 74 24 18          	pushl  0x18(%esp)
 804a0ea:	68 39 ab 04 08       	push   $0x804ab39
 804a0ef:	6a 01                	push   $0x1
 804a0f1:	e8 ea e7 ff ff       	call   80488e0 <__printf_chk@plt>
 804a0f6:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a0fb:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a0ff:	83 c4 10             	add    $0x10,%esp
 804a102:	b8 00 00 00 00       	mov    $0x0,%eax
 804a107:	eb 3e                	jmp    804a147 <driver_post+0x77>
 804a109:	85 c0                	test   %eax,%eax
 804a10b:	74 2c                	je     804a139 <driver_post+0x69>
 804a10d:	80 38 00             	cmpb   $0x0,(%eax)
 804a110:	74 27                	je     804a139 <driver_post+0x69>
 804a112:	83 ec 04             	sub    $0x4,%esp
 804a115:	53                   	push   %ebx
 804a116:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a11a:	68 50 ab 04 08       	push   $0x804ab50
 804a11f:	50                   	push   %eax
 804a120:	68 57 ab 04 08       	push   $0x804ab57
 804a125:	68 31 43 00 00       	push   $0x4331
 804a12a:	68 24 ab 04 08       	push   $0x804ab24
 804a12f:	e8 cb f5 ff ff       	call   80496ff <submitr>
 804a134:	83 c4 20             	add    $0x20,%esp
 804a137:	eb 0e                	jmp    804a147 <driver_post+0x77>
 804a139:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a13e:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a142:	b8 00 00 00 00       	mov    $0x0,%eax
 804a147:	83 c4 08             	add    $0x8,%esp
 804a14a:	5b                   	pop    %ebx
 804a14b:	c3                   	ret    
 804a14c:	66 90                	xchg   %ax,%ax
 804a14e:	66 90                	xchg   %ax,%ax

0804a150 <__libc_csu_init>:
 804a150:	55                   	push   %ebp
 804a151:	57                   	push   %edi
 804a152:	56                   	push   %esi
 804a153:	53                   	push   %ebx
 804a154:	e8 57 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a159:	81 c3 a7 2e 00 00    	add    $0x2ea7,%ebx
 804a15f:	83 ec 0c             	sub    $0xc,%esp
 804a162:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a166:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a16c:	e8 ef e5 ff ff       	call   8048760 <_init>
 804a171:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a177:	29 c6                	sub    %eax,%esi
 804a179:	c1 fe 02             	sar    $0x2,%esi
 804a17c:	85 f6                	test   %esi,%esi
 804a17e:	74 25                	je     804a1a5 <__libc_csu_init+0x55>
 804a180:	31 ff                	xor    %edi,%edi
 804a182:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a188:	83 ec 04             	sub    $0x4,%esp
 804a18b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a18f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a193:	55                   	push   %ebp
 804a194:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a19b:	83 c7 01             	add    $0x1,%edi
 804a19e:	83 c4 10             	add    $0x10,%esp
 804a1a1:	39 f7                	cmp    %esi,%edi
 804a1a3:	75 e3                	jne    804a188 <__libc_csu_init+0x38>
 804a1a5:	83 c4 0c             	add    $0xc,%esp
 804a1a8:	5b                   	pop    %ebx
 804a1a9:	5e                   	pop    %esi
 804a1aa:	5f                   	pop    %edi
 804a1ab:	5d                   	pop    %ebp
 804a1ac:	c3                   	ret    
 804a1ad:	8d 76 00             	lea    0x0(%esi),%esi

0804a1b0 <__libc_csu_fini>:
 804a1b0:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a1b4 <_fini>:
 804a1b4:	53                   	push   %ebx
 804a1b5:	83 ec 08             	sub    $0x8,%esp
 804a1b8:	e8 f3 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a1bd:	81 c3 43 2e 00 00    	add    $0x2e43,%ebx
 804a1c3:	83 c4 08             	add    $0x8,%esp
 804a1c6:	5b                   	pop    %ebx
 804a1c7:	c3                   	ret    
